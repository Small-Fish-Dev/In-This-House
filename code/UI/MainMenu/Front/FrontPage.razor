@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@namespace BrickJam.UI.MainMenu.Front
@attribute [StyleSheet]

<root style="flex-direction: column;">

    <div class="game-title">
        @Game.Menu.Package.Title
    </div>

    <div class="controls">

        @if ( Game.InGame )
        {
            <a class="button" href="/active">Current Game</a>
            <a class="button" onclick=@LeaveGame>Leave Game</a>
            <span style="height: 20px;"></span>
        }
        else
        {
            <a class="button" onclick="@CreateNewGame">Create Game</a>
        }

        <a class="button" onclick="@OpenServerList">Find a Game</a>
        <a class="button" href="/settings">Settings</a>

        <span style="height: 20px;"></span>
        
        <a class="button" href="/credits">Credits</a>

        <span style="height: 20px;"></span>

        <a class="button" @onclick=@Game.Menu.Close>Quit</a>

    </div>

</root>

@code
{
    void LoadSavedGame()
    {
        this.Navigate( "/load" );
    }

    void LeaveGame()
    {
        Game.Menu.LeaveServer("Leaving");
    }

    void CreateNewGame()
    {
        var options = new Sandbox.Modals.GameCreateModalOptions();
        options.Cookie = $"{Game.Menu.Package.FullIdent}.serverconfig";

	    options.MaxPlayers = 4;
	    options.MapSelection = false;
        options.ModalTitle = "Create Game";
        options.Default.GameTitle = $"{Game.UserName}'s Server";

        options.OnStartGame = setup =>
        {
            Game.Menu.StartServerAsync(setup.MaxPlayers, setup.GameTitle, "mansion");
        };

        Game.Overlay.ShowCreateGame(options);
    }

    void OpenServerList()
    {
        var options = new Sandbox.Modals.ServerListModalOptions();
        options.TargetGame = Game.Menu.Package.FullIdent;
        options.OnSelected = server =>
        {
            Game.Menu.ConnectToServer(server.SteamId);
        };

        Game.Overlay.ShowServerList(options);
    }
}
