@using Sandbox.UI;

@namespace BrickJam.UI
@inherits Panel

<root class="@(Active ? "active" : "")">
	<div class="container">
		<div class="icon" />
		<label>@(playersAlive) of @(Game.Clients.Count)</label>
	</div>
</root>

@code {
	public bool Active { get; set; }
	private int playersAlive => Game.Clients
		.Where( x => x.Pawn is Player ply && ply.IsAlive )
		.Count();

	protected override int BuildHash()
	{
		if ( Active )
			return HashCode.Combine( Active, playersAlive );

		return HashCode.Combine( Active );
	}
}

<style>
	PlayerCounter {
		position: absolute;
		right: 0px;
		top: 100px;
		padding-left: 40px;
		padding-right: 10px;
		padding-top: 5px;
		font-size: 50px;
		color: white;
		flex-direction: row-reverse;
		z-index: 3;
		background: linear-gradient(to left, rgba(black, 0.5) 0%, rgba(black, 0.2) 75%, rgba(black, 0) 100%);
		transform: translateX(100%);
		transition: transform 0.5s ease-in-out;

		.container {
			flex-direction: row;
			text-shadow: 4px 4px 0px black;
		}

		&.active {
			transform: translateX(0%);
		}

		.icon {
			top: 5px;
			margin-right: 15px; 
			background-image: url(ui/player_icon.png);
			image-rendering: point;
			background-size: 100%;
			background-position: center;
			background-repeat: no-repeat;
			width: 32px;
			filter: drop-shadow(3px 3px 1px black);
			aspect-ratio: 1;
		}
	}
</style>
