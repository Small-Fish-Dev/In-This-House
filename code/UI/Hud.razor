@using Sandbox;
@using Sandbox.UI;

@namespace BrickJam.UI
@inherits RootPanel
@attribute [StyleSheet]

<root>
	@{
		var player = LocalPlayer;

		var isSpectator = Game.LocalPawn is Spectator;
		var isPlayer = Game.LocalPawn is BrickJam.Player;
	}

	@if ( MansionGame.Instance?.TimerActive ?? false )
	{
		<Timer @Seconds=@( () => (float)MansionGame.Instance.TimeOut )/>
	}

	@if ( player is not null )
	{
		<!-- The client either has a living pawn or is observing another player's pawn -->
		<StunIndicator @Player=@player/>
		<Inventory/>
		<MoneyCounter/>

		<Crosshair>
			<Top>
				Some text on the top
			</Top>
			<Middle>
				<InteractionIndicator @Player=@player/>
			</Middle>
			<Bottom>
				Some text on the bottom
				@if ( isPlayer )
				{
					<InteractionTip @Player=@player/>
				}
			</Bottom>
		</Crosshair>
	}
	
	<SubtitlesList @Pawn=@player />

	@if ( Game.LocalPawn is Spectator spectator )
	{
		<div>yuo're dead lol lmao git gud</div>

		if ( player is not null )
		{
			<div>Observing @player.Client.Name</div>
			<label>Press Space to stop following this player</label>
		}
	}
</root>

@code {
	public static Hud Instance => (Hud)_instance?.Target;
	private static WeakReference _instance;

	private static BrickJam.Player LocalPlayer => Game.LocalPawn switch
	{
		BrickJam.Player playerAlive => playerAlive,
		Spectator playerSpectator => playerSpectator.Following,
		_ => null
	};

	public Hud()
	{
		Instance?.Delete( true );
		_instance = new WeakReference( this );
	}

	protected override int BuildHash()
	{
	// TODO: don't change it to "MansionGame.Instance?" !!! There's something that is calling this func from the menu
		return HashCode.Combine( Game.LocalPawn, LocalPlayer, MansionGame.Instance.TimerActive );
	}

}
