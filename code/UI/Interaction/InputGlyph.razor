@using Sandbox;
@using Sandbox.UI;

@namespace ITH.UI 
@inherits Panel

<style>
	InputGlyph {
		background-size: contain;
		background-position: center;
		background-repeat: no-repeat;
		filter: drop-shadow(3px 3px 1px black);
	}
</style>

<root />

@code {
	public InputGlyphSize GlyphSize { get; set; } = InputGlyphSize.Small;
	public string Action { get; set; }
	public GlyphStyle GlyphStyle { get; set; } = GlyphStyle.Knockout.WithSolidABXY();

	protected override void OnAfterTreeRender(bool firstTime)
	{
		base.OnAfterTreeRender(firstTime);

		if (firstTime)
			Update();
	}

	public void Update()
	{
		var glyph = Input.GetGlyph(Action, GlyphSize, GlyphStyle);
		if (glyph == null)
			return;

		Style.BackgroundImage = glyph;
	}

	public override void SetProperty(string name, string value)
	{
		switch (name)
		{
			case "button":
				Update();

				break;

			case "size":
				if (!InputGlyphSize.TryParse(value, true, out InputGlyphSize glyphSize))
					break;

				GlyphSize = glyphSize;
				Update();

				break;

			case "style":
				GlyphStyle = value switch
				{
					"knockout" => GlyphStyle.Knockout,
					"light" => GlyphStyle.Light,
					"dark" => GlyphStyle.Dark,
					_ => GlyphStyle
				};
				Update();

				break;
		}

		base.SetProperty(name, value);
	}
}
